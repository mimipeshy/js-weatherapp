(()=>{"use strict";const e=async function(e){try{const t=await Promise.race([fetch(e),(10,new Promise((function(e,t){setTimeout((function(){t(new Error("Request took too long! Timeout after 10 second"))}),1e4)})))]),a=await t.json();if(!t.ok)throw new Error(`${a.message[0].toUpperCase()+a.message.slice(1)} (${t.status})`);return a}catch(e){throw e}},t={data:{}},a=function(e,t="short"){const a="full"===t?{dateStyle:"full",timeStyle:"short"}:{timeStyle:"short"},s=new Date(1e3*e);return new Intl.DateTimeFormat(navigator.language,a).format(s)},s=async function(s){const n=Array.isArray(s)?`lat=${s[0]}&lon=${s[1]}`:`q=${s}`;try{const s=await e(`https://api.openweathermap.org/data/2.5/weather?${n}&units=metric&appid=da55a677205c556d6c26145698c431fd`);t.data={name:s.name,country:s.sys.country,temp:Math.round(s.main.temp),feelsLike:Math.round(s.main.feels_like),humidity:s.main.humidity,sunrise:a(s.sys.sunrise),sunset:a(s.sys.sunset),date:a(s.dt,"full"),iconSmall:`https://openweathermap.org/img/wn/${s.weather[0].icon}@2x.png`,description:s.weather[0].description[0].toUpperCase()+s.weather[0].description.slice(1),unit:"metric"};const r=await e(`https://restcountries.eu/rest/v2/alpha?codes=${t.data.country}`);t.data.flag=r[0].flag}catch(e){throw e}},n=new class{constructor(){this._parentElement=document.querySelector(".glass__result"),this._searchBar=document.querySelector(".glass__search-bar"),this._smallCircle=document.querySelector(".circle--small"),this._message="What's the weather like today? ☁"}getQuery(){const e=this._searchBar.querySelector(".glass__search-input").value;return this._clearInput(),e}_clearInput(){this._searchBar.querySelector(".glass__search-input").value=""}_clear(){this._parentElement.innerHTML=""}render(e){if(!e)return;const t=`\n    <div class="glass__weather">\n      <span>Updated as of:</span>\n      <p><span>${e.date}</span></p><br>\n      <h2>${e.name}, ${e.country}</h2>\n      <div class="glass__temperature">\n          <img src="${e.iconSmall}" alt="weather icon" class="glass__weather-icon">\n          <h1>${e.temp}<sup>°${"metric"===e.unit?"C":"F"}</sup></h1>\n      </div>\n      <p>${e.description}</p>\n      <div class="glass__details">\n          <p>Feels like: ${e.feelsLike} °${"metric"===e.unit?"C":"F"}</p>\n          <p>Humidity: ${e.humidity}%</p>\n          <p>Sunrise: ${e.sunrise}</p>\n          <p>Sunset: ${e.sunset}</p>\n      </div>\n      <div class="glass__switch">\n          <div class="glass__select celcius ${"metric"===e.unit?"glass__select--active":""}" data-unit="metric">C</div>\n          <div class="glass__select fahrenheit ${"imperial"===e.unit?"glass__select--active":""}" data-unit="imperial">F</div>\n      </div>\n    </div>\n    `;this._smallCircle.style.backgroundImage=`url(${e.iconBig})`,this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",t)}renderSpinner(){this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",'<div class="glass__loader"></div>')}renderMessage(e=this._message){const t=`<span class="glass__text">${e}</span>`;this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",t)}addHandlerRender(e){window.addEventListener("load",e)}addHandlerSearch(e){this._searchBar.addEventListener("submit",(function(t){t.preventDefault(),e()}))}addHandlerConvert(e){this._parentElement.addEventListener("click",(function(t){const a=t.target.closest(".glass__select");a&&!a.classList.contains("glass__select--active")&&e(a.dataset.unit)}))}},r=async function(e){try{const{latitude:a}=e.coords,{longitude:r}=e.coords;await s([a,r]),n.render(t.data)}catch(e){console.error(e),n.renderMessage(e.message)}};(n.addHandlerRender((function(){n.renderSpinner(),navigator.geolocation&&navigator.geolocation.getCurrentPosition(r,(function(){n.renderMessage()}))})),n.addHandlerSearch((async function(){try{n.renderSpinner();const e=n.getQuery();if(!e)return;await s(e),n.render(t.data)}catch(e){console.error(e),n.renderMessage(e.message)}})),void n.addHandlerConvert((function(e){!function(e){"imperial"===e&&(t.data.temp=Math.round(9*t.data.temp/5+32),t.data.feelsLike=Math.round(9*t.data.feelsLike/5+32),t.data.unit="imperial"),"metric"===e&&(t.data.temp=Math.round(5*(t.data.temp-32)/9),t.data.feelsLike=Math.round(5*(t.data.feelsLike-32)/9),t.data.unit="metric")}(e),n.render(t.data)})))()})();